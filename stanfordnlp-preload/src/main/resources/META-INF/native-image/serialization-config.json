{
  "types":[
    {
      "name":"double[]"
    },
    {
      "name":"double[][]"
    },
    {
      "name":"edu.stanford.nlp.classify.LinearClassifier"
    },
    {
      "name":"edu.stanford.nlp.coref.neural.NeuralCorefModel"
    },
    {
      "name":"edu.stanford.nlp.ie.KBPStatisticalExtractor"
    },
    {
      "name":"edu.stanford.nlp.ie.NERFeatureFactory"
    },
    {
      "name":"edu.stanford.nlp.ie.crf.CRFLabel"
    },
    {
      "name":"edu.stanford.nlp.ling.CoreLabel"
    },
    {
      "name":"edu.stanford.nlp.neural.Embedding"
    },
    {
      "name":"edu.stanford.nlp.optimization.StochasticCalculateMethods"
    },
    {
      "name":"edu.stanford.nlp.parser.lexparser.AbstractTreebankParserParams"
    },
    {
      "name":"edu.stanford.nlp.parser.lexparser.BaseLexicon"
    },
    {
      "name":"edu.stanford.nlp.parser.lexparser.BaseUnknownWordModel"
    },
    {
      "name":"edu.stanford.nlp.parser.lexparser.BinaryGrammar"
    },
    {
      "name":"edu.stanford.nlp.parser.lexparser.BinaryRule"
    },
    {
      "name":"edu.stanford.nlp.parser.lexparser.EnglishTreebankParserParams"
    },
    {
      "name":"edu.stanford.nlp.parser.lexparser.EnglishTreebankParserParams$EnglishTest"
    },
    {
      "name":"edu.stanford.nlp.parser.lexparser.EnglishTreebankParserParams$EnglishTrain"
    },
    {
      "name":"edu.stanford.nlp.parser.lexparser.EnglishUnknownWordModel"
    },
    {
      "name":"edu.stanford.nlp.parser.lexparser.IntTaggedWord"
    },
    {
      "name":"edu.stanford.nlp.parser.lexparser.LexicalizedParser"
    },
    {
      "name":"edu.stanford.nlp.parser.lexparser.Options"
    },
    {
      "name":"edu.stanford.nlp.parser.lexparser.Options$LexOptions"
    },
    {
      "name":"edu.stanford.nlp.parser.lexparser.TestOptions"
    },
    {
      "name":"edu.stanford.nlp.parser.lexparser.TrainOptions"
    },
    {
      "name":"edu.stanford.nlp.parser.lexparser.TrainOptions$TransformMatrixType"
    },
    {
      "name":"edu.stanford.nlp.parser.lexparser.UnaryGrammar"
    },
    {
      "name":"edu.stanford.nlp.parser.lexparser.UnaryRule"
    },
    {
      "name":"edu.stanford.nlp.process.AmericanizeFunction"
    },
    {
      "name":"edu.stanford.nlp.sequences.FeatureFactory"
    },
    {
      "name":"edu.stanford.nlp.sequences.SeqClassifierFlags"
    },
    {
      "name":"edu.stanford.nlp.sequences.SeqClassifierFlags$SlashHyphenEnum"
    },
    {
      "name":"edu.stanford.nlp.stats.ClassicCounter"
    },
    {
      "name":"edu.stanford.nlp.tagger.maxent.CompanyNameDetector"
    },
    {
      "name":"edu.stanford.nlp.tagger.maxent.Distsim"
    },
    {
      "name":"edu.stanford.nlp.tagger.maxent.Extractor"
    },
    {
      "name":"edu.stanford.nlp.tagger.maxent.ExtractorAllCapitalized"
    },
    {
      "name":"edu.stanford.nlp.tagger.maxent.ExtractorCNumber"
    },
    {
      "name":"edu.stanford.nlp.tagger.maxent.ExtractorDash"
    },
    {
      "name":"edu.stanford.nlp.tagger.maxent.ExtractorDistsim"
    },
    {
      "name":"edu.stanford.nlp.tagger.maxent.ExtractorDistsimConjunction"
    },
    {
      "name":"edu.stanford.nlp.tagger.maxent.ExtractorFrames$ExtractorContinuousTagConjunction"
    },
    {
      "name":"edu.stanford.nlp.tagger.maxent.ExtractorLetterDigitDash"
    },
    {
      "name":"edu.stanford.nlp.tagger.maxent.ExtractorMidSentenceCap"
    },
    {
      "name":"edu.stanford.nlp.tagger.maxent.ExtractorMidSentenceCapC"
    },
    {
      "name":"edu.stanford.nlp.tagger.maxent.ExtractorNonAlphanumeric"
    },
    {
      "name":"edu.stanford.nlp.tagger.maxent.ExtractorStartSentenceCap"
    },
    {
      "name":"edu.stanford.nlp.tagger.maxent.ExtractorUCase"
    },
    {
      "name":"edu.stanford.nlp.tagger.maxent.ExtractorUpperDigitDash"
    },
    {
      "name":"edu.stanford.nlp.tagger.maxent.ExtractorWordPref"
    },
    {
      "name":"edu.stanford.nlp.tagger.maxent.ExtractorWordShapeClassifier"
    },
    {
      "name":"edu.stanford.nlp.tagger.maxent.ExtractorWordSuff"
    },
    {
      "name":"edu.stanford.nlp.tagger.maxent.Extractor[]"
    },
    {
      "name":"edu.stanford.nlp.tagger.maxent.Extractors"
    },
    {
      "name":"edu.stanford.nlp.tagger.maxent.RareExtractor"
    },
    {
      "name":"edu.stanford.nlp.tagger.maxent.TaggerConfig"
    },
    {
      "name":"edu.stanford.nlp.trees.AbstractCollinsHeadFinder"
    },
    {
      "name":"edu.stanford.nlp.trees.AbstractTreebankLanguagePack"
    },
    {
      "name":"edu.stanford.nlp.trees.CollinsHeadFinder"
    },
    {
      "name":"edu.stanford.nlp.trees.ModCollinsHeadFinder"
    },
    {
      "name":"edu.stanford.nlp.trees.PennTreebankLanguagePack"
    },
    {
      "name":"edu.stanford.nlp.util.ArrayCoreMap"
    },
    {
      "name":"edu.stanford.nlp.util.Filters$CollectionAcceptFilter"
    },
    {
      "name":"edu.stanford.nlp.util.HashIndex"
    },
    {
      "name":"edu.stanford.nlp.util.MapFactory"
    },
    {
      "name":"edu.stanford.nlp.util.MapFactory$HashMapFactory"
    },
    {
      "name":"edu.stanford.nlp.util.MaxSizeConcurrentHashSet"
    },
    {
      "name":"edu.stanford.nlp.util.MutableDouble"
    },
    {
      "name":"int[]"
    },
    {
      "name":"java.lang.Boolean"
    },
    {
      "name":"java.lang.Class[]"
    },
    {
      "name":"java.lang.Enum"
    },
    {
      "name":"java.lang.Integer"
    },
    {
      "name":"java.lang.Number"
    },
    {
      "name":"java.lang.Object[]"
    },
    {
      "name":"java.lang.String[][]"
    },
    {
      "name":"java.util.ArrayList"
    },
    {
      "name":"java.util.HashMap"
    },
    {
      "name":"java.util.HashSet"
    },
    {
      "name":"java.util.Hashtable"
    },
    {
      "name":"java.util.Properties"
    },
    {
      "name":"java.util.TreeMap"
    },
    {
      "name":"java.util.concurrent.ConcurrentHashMap"
    },
    {
      "name":"java.util.concurrent.ConcurrentHashMap$Segment"
    },
    {
      "name":"java.util.concurrent.ConcurrentHashMap$Segment[]"
    },
    {
      "name":"java.util.concurrent.Semaphore"
    },
    {
      "name":"java.util.concurrent.Semaphore$NonfairSync"
    },
    {
      "name":"java.util.concurrent.Semaphore$Sync"
    },
    {
      "name":"java.util.concurrent.locks.AbstractOwnableSynchronizer"
    },
    {
      "name":"java.util.concurrent.locks.AbstractQueuedSynchronizer"
    },
    {
      "name":"java.util.concurrent.locks.ReentrantLock"
    },
    {
      "name":"java.util.concurrent.locks.ReentrantLock$NonfairSync"
    },
    {
      "name":"java.util.concurrent.locks.ReentrantLock$Sync"
    },
    {
      "name":"java.util.regex.Pattern"
    },
    {
      "name":"org.ejml.data.DMatrix1Row"
    },
    {
      "name":"org.ejml.data.DMatrixD1"
    },
    {
      "name":"org.ejml.data.DMatrixRMaj"
    },
    {
      "name":"org.ejml.simple.SimpleBase"
    },
    {
      "name":"org.ejml.simple.SimpleMatrix"
    },
    {
      "name":"org.ejml.simple.ops.SimpleOperations_DDRM"
    }
  ],
  "lambdaCapturingTypes":[
  ],
  "proxies":[
  ]
}
